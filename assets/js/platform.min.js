let bResetStorage=!1;function loadPlatform(e){let t=localStorage.getItem("reset");void 0==t||bResetStorage||t<iResetStorage&&(bResetStorage=!0,chrome.storage.sync.clear(),e.innerHTML="Config Reset to defaults, please re-upload if required",e.style.color="red",console.log("Config Reset to defaults, please re-upload if required: version"+iResetStorage)),localStorage.setItem("reset",iResetStorage),void 0==localStorage.getItem("complexity")||bResetStorage?(localStorage.setItem("complexity",JSON.stringify(aComplexityTemplate)),aComplexity=aComplexityTemplate.slice()):aComplexity=JSON.parse(localStorage.getItem("complexity")),void 0==localStorage.getItem("ratings")||bResetStorage?(localStorage.setItem("ratings",JSON.stringify(oRatingsTemplate)),oRatings=oRatingsTemplate):oRatings=JSON.parse(localStorage.getItem("ratings")),void 0==localStorage.getItem("scoring")||bResetStorage?(localStorage.setItem("scoring",JSON.stringify(aScoringTemplate)),aScoring=aScoringTemplate.slice(0)):aScoring=JSON.parse(localStorage.getItem("scoring")),void 0==localStorage.getItem("naming")||bResetStorage?(localStorage.setItem("naming",JSON.stringify(oNamingTemplate)),oNaming=oNamingTemplate):oNaming=JSON.parse(localStorage.getItem("naming")),void 0==localStorage.getItem("references")||bResetStorage?(localStorage.setItem("references",JSON.stringify(oConfigReferenceTemplate)),oConfigReference=oConfigReferenceTemplate):oConfigReference=JSON.parse(localStorage.getItem("references")),void 0==localStorage.getItem("saved")||void 0==localStorage.getItem("definition")||bResetStorage?(oSaved=null,oSavedDef=null):(oSaved=JSON.parse(localStorage.getItem("saved")),oSavedDef=JSON.parse(localStorage.getItem("definition"))),localStorage.setItem("naming",JSON.stringify(oNamingTemplate)),localStorage.setItem("complexity",JSON.stringify(aComplexityTemplate))}function AddCompare(){localStorage.setItem("compare",JSON.stringify(sDefinitionParsed)),document.getElementById("addCompare-button").style="color: red;"}function OpenCompare(){let e,t=[],n=changeTemplate,r=localStorage.getItem("compare");if(void 0!=r){let s=DeepDiff(sDefinitionParsed,e=JSON.parse(r));void 0==s?s="No differences found":t=s,i=sessionStorage.getItem("windowCounter");let a="",o="",d='<table class="mui-table mui-table--bordered" id="changeTable"><thead><tr><th>Type</th><th>Path</th><th>First Flow</th><th>Second Flow</th></tr></thead><tbody>';t.forEach(e=>{a=void 0!=e.lhs?JSON.stringify(e.lhs)+"</td><td>":"</td><td>",o=void 0!=e.rhs?JSON.stringify(e.rhs)+"</td>":"<td>",d+="<tr><td style ='width:40px' id='"+e.kind+"-IN'>"+e.kind+"</td><td>"+JSON.stringify(e.path)+"</td><td>"+a+o+"</tr>"}),d+="</tbody></table><br>",n=(n=(n=n.replace("{flowName}",pLoading.innerText)).replace("{date}",getToday())).replace("{json}",'<u>Key</u><br> kind - indicates the kind of change; will be one of the following:<br> kN - indicates a newly added property/element<br> kD - indicates a property/element was deleted<br> kE - indicates a property/element was edited<br> kA - indicates a change occurred within an array<br> kpath - the property path (from the left-hand-side root)<br> klhs - the value on the left-hand-side of the comparison (undefined if kind === "N")<br> krhs - the value on the right-hand-side of the comparison (undefined if kind === "D")<br> kindex - when kind === "A", indicates the array index where the change occurred<br> kitem - when kind === "A", contains a nested change record indicating the change that occurred at the array index<br><br>'+JSON.stringify(s,void 0,2)),sessionStorage.setItem("changes",n.replace("{changeTable}",d)),window.open("changes.html","Comparison"+new Date().getTime()+i),i++,sessionStorage.setItem("windowCounter",i)}}function SaveData(){localStorage.setItem("saved",JSON.stringify(removeCircularReferences(oReport))),localStorage.setItem("definition",JSON.stringify(sDefinitionParsed));let e={name:oReport.name,id:oReport.id,data:oReport.actionArray};sessionStorage.setItem("diagram",JSON.stringify(removeCircularReferences(e)))}function ResetConfigs(){localStorage.setItem("complexity",JSON.stringify(aComplexityTemplate)),localStorage.setItem("ratings",JSON.stringify(oRatingsTemplate)),localStorage.setItem("score",JSON.stringify(aScoringTemplate)),localStorage.setItem("naming",JSON.stringify(oNamingTemplate)),localStorage.setItem("scoring",JSON.stringify(aScoringTemplate)),localStorage.setItem("references",JSON.stringify(oConfigReferenceTemplate)),aComplexity=aComplexityTemplate.slice(),oRatings=oRatingsTemplate,aScoring=aScoringTemplate.slice(0),oNaming=oNamingTemplate,oConfigReference=oConfigReferenceTemplate,pLoading.innerHTML="Config Reset to defaults"}function UpdateConfigs(){localStorage.setItem("complexity",JSON.stringify(aComplexity)),localStorage.setItem("ratings",JSON.stringify(oRatings)),localStorage.setItem("score",JSON.stringify(aScoring)),localStorage.setItem("naming",JSON.stringify(oNaming)),localStorage.setItem("scoring",JSON.stringify(aScoring)),localStorage.setItem("references",JSON.stringify(oConfigReference))}